#include <iostream>
#include <string>
#include <vector>
#include <SFML/audio.hpp>
#include <SFML/Graphics.hpp>
#include "GameMaster.h"

using namespace std;
using namespace sf;

int main(void) {

	

	GameMaster MJ;
	Font myFont;
	if (!myFont.loadFromFile("PressStart2P-Regular.ttf")) {
		cout << "Font failed to load" << endl;
	}
	MJ.setFont(&myFont);
	/*
	VIDE, MUR, ONEWAY, ONEWAY_HAUT, ONEWAY_BAS, ONEWAY_GAUCHE, 
	ONEWAY_DROITE, PIQUE, 
	
	SWITCH, GOAL, ROCHER, BOUTEILLE, 
	BOUTEILLE_VIVANTE, BOUTEILLE_COULEUR1, BOUTEILLE_COULEUR2,
	BOUTEILLE_COULEUR3, BLOC, BLOC_VIVANT, BLOC_COULEUR1, 
	BLOC_COULEUR2, BLOC_COULEUR3, ANIMAL, ANIMAL_COULEUR1, 
	ANIMAL_COULEUR2, ANIMAL_COULEUR3, PLAYER, SPAWN
	*/
	MJ.addMap(Map({
			
		{MUR,	MUR,	MUR,	MUR,			MUR,		MUR,		MUR,			MUR,			MUR,	MUR,			MUR,	MUR,				MUR,			MUR,			MUR,			MUR,				MUR,	MUR,	MUR,			MUR,				MUR,			MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR},

		{MUR,	MUR,	MUR,	MUR,			MUR,		MUR,		MUR,			MUR,			MUR,	MUR,			MUR,	MUR,				MUR,			MUR,			MUR,			MUR,				MUR,	MUR,	MUR,			MUR,				MUR,			MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	VIDE,			VIDE,		VIDE,		VIDE,			VIDE,			VIDE,	VIDE,			MUR,	VIDE,				VIDE,			VIDE,			VIDE,			VIDE,				VIDE,	VIDE,	VIDE,			VIDE,				VIDE,			VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	VIDE,			VIDE,		VIDE,		VIDE,			VIDE,			VIDE,	VIDE,			VIDE,	VIDE,				VIDE,			VIDE,			VIDE,			VIDE,				VIDE,	VIDE,	VIDE,			VIDE,				VIDE,			VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	VIDE,			VIDE,		VIDE,		VIDE,			VIDE,			VIDE,	ONEWAY_DROITE,	VIDE,	VIDE,				VIDE,			VIDE,			VIDE,			VIDE,				VIDE,	VIDE,	VIDE,			VIDE,				VIDE,			VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	ONEWAY_HAUT,	VIDE,		VIDE,		VIDE,			VIDE,			VIDE,	VIDE,			VIDE,	VIDE,				VIDE,			VIDE,			VIDE,			VIDE,				VIDE,	VIDE,	VIDE,			VIDE,				VIDE,			VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	VIDE,			ONEWAY_BAS,	VIDE,		VIDE,			VIDE,			VIDE,	VIDE,			MUR,	VIDE,				VIDE,			VIDE,			VIDE,			BOUTEILLE,			VIDE,	VIDE,	VIDE,		 	BOUTEILLE_COULEUR3,	VIDE,			VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	VIDE,			VIDE,		VIDE,		VIDE,			ONEWAY_HAUT,	VIDE,	VIDE,			MUR,	ONEWAY_HAUT,		ONEWAY_HAUT,	ONEWAY_HAUT,	ONEWAY_HAUT,	ONEWAY_HAUT,		VIDE,	VIDE,	ONEWAY_HAUT,	ONEWAY_HAUT,		VIDE,			VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	ONEWAY_HAUT,	VIDE,		VIDE,		ONEWAY_GAUCHE,	ONEWAY_DROITE,	VIDE,	VIDE,			MUR,	VIDE,				VIDE,			VIDE,			VIDE,			VIDE,				VIDE,	VIDE,	VIDE,			VIDE,				VIDE,			VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},
			
		{MUR,	MUR,	VIDE,	VIDE,			VIDE,		ONEWAY_BAS,	VIDE,			ONEWAY_BAS,		VIDE,	ONEWAY_BAS,		MUR,	VIDE,				VIDE,			VIDE,			VIDE,			VIDE,				VIDE,	VIDE,	VIDE,			VIDE,				VIDE,			VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	VIDE,			VIDE,		VIDE,		VIDE,			VIDE,			VIDE,	VIDE,			MUR,	MUR,				VIDE,			VIDE,			VIDE,			VIDE,				VIDE,	VIDE,	ONEWAY_HAUT,	VIDE,				ONEWAY_HAUT,	VIDE,	VIDE,	MUR,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	ONEWAY_HAUT,	VIDE,		VIDE,		VIDE,			VIDE,			VIDE,	VIDE,			MUR,	VIDE,				VIDE,			VIDE,			VIDE,			VIDE,				VIDE,	VIDE,	VIDE,			VIDE,				VIDE,			VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	SPAWN,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	VIDE,	VIDE,			VIDE,		VIDE,		VIDE,			VIDE,			PIQUE,	PIQUE,			MUR,	BOUTEILLE_VIVANTE,	VIDE,			VIDE,			VIDE,			BOUTEILLE_COULEUR1,	VIDE,	SWITCH,	VIDE,			BOUTEILLE_COULEUR2,	VIDE,			VIDE,	VIDE,	VIDE,	ROCHER,	VIDE,	VIDE,	VIDE,	VIDE,	VIDE,	MUR,	MUR},

		{MUR,	MUR,	MUR,	MUR,			MUR,		MUR,		MUR,			MUR,			MUR,	MUR,			MUR,	MUR,				MUR,			MUR,			MUR,			MUR,				MUR,	MUR,	MUR,			MUR,				MUR,			MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR},

		{MUR,	MUR,	MUR,	MUR,			MUR,		MUR,		MUR,			MUR,			MUR,	MUR,			MUR,	MUR,				MUR,			MUR,			MUR,			MUR,				MUR,	MUR,	MUR,			MUR,				MUR,			MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR,	MUR},



	}));

	MJ.run();
}